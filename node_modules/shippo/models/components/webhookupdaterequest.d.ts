import * as z from "zod";
import { WebhookEventTypeEnum } from "./webhookeventtypeenum.js";
export type WebhookUpdateRequest = {
    /**
     * Type of event that triggered the webhook.
     */
    event: WebhookEventTypeEnum;
    /**
     * URL webhook events are sent to.
     */
    url: string;
    /**
     * Determines whether the webhook is active or not.
     */
    active?: boolean | undefined;
    /**
     * Determines whether the webhook is a test webhook or not.
     */
    isTest?: boolean | undefined;
};
/** @internal */
export declare const WebhookUpdateRequest$inboundSchema: z.ZodType<WebhookUpdateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type WebhookUpdateRequest$Outbound = {
    event: string;
    url: string;
    active?: boolean | undefined;
    is_test?: boolean | undefined;
};
/** @internal */
export declare const WebhookUpdateRequest$outboundSchema: z.ZodType<WebhookUpdateRequest$Outbound, z.ZodTypeDef, WebhookUpdateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookUpdateRequest$ {
    /** @deprecated use `WebhookUpdateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WebhookUpdateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `WebhookUpdateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WebhookUpdateRequest$Outbound, z.ZodTypeDef, WebhookUpdateRequest>;
    /** @deprecated use `WebhookUpdateRequest$Outbound` instead. */
    type Outbound = WebhookUpdateRequest$Outbound;
}
//# sourceMappingURL=webhookupdaterequest.d.ts.map