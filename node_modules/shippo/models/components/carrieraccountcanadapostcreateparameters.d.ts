import * as z from "zod";
export type CarrierAccountCanadaPostCreateParameters = {
    /**
     * Whether or not the user agrees to Canada Post's terms. If passed in as false, request will fail with error 400
     */
    canadaPostTerms: boolean;
    company: string;
    email: string;
    fullName: string;
    /**
     * Needs to be a valid phone number and cannot be null
     */
    phone: string;
};
/** @internal */
export declare const CarrierAccountCanadaPostCreateParameters$inboundSchema: z.ZodType<CarrierAccountCanadaPostCreateParameters, z.ZodTypeDef, unknown>;
/** @internal */
export type CarrierAccountCanadaPostCreateParameters$Outbound = {
    canada_post_terms: boolean;
    company: string;
    email: string;
    full_name: string;
    phone: string;
};
/** @internal */
export declare const CarrierAccountCanadaPostCreateParameters$outboundSchema: z.ZodType<CarrierAccountCanadaPostCreateParameters$Outbound, z.ZodTypeDef, CarrierAccountCanadaPostCreateParameters>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CarrierAccountCanadaPostCreateParameters$ {
    /** @deprecated use `CarrierAccountCanadaPostCreateParameters$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CarrierAccountCanadaPostCreateParameters, z.ZodTypeDef, unknown>;
    /** @deprecated use `CarrierAccountCanadaPostCreateParameters$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CarrierAccountCanadaPostCreateParameters$Outbound, z.ZodTypeDef, CarrierAccountCanadaPostCreateParameters>;
    /** @deprecated use `CarrierAccountCanadaPostCreateParameters$Outbound` instead. */
    type Outbound = CarrierAccountCanadaPostCreateParameters$Outbound;
}
//# sourceMappingURL=carrieraccountcanadapostcreateparameters.d.ts.map