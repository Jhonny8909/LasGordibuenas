import * as z from "zod";
export type RefundRequestBody = {
    async?: boolean | undefined;
    transaction: string;
};
/** @internal */
export declare const RefundRequestBody$inboundSchema: z.ZodType<RefundRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type RefundRequestBody$Outbound = {
    async?: boolean | undefined;
    transaction: string;
};
/** @internal */
export declare const RefundRequestBody$outboundSchema: z.ZodType<RefundRequestBody$Outbound, z.ZodTypeDef, RefundRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RefundRequestBody$ {
    /** @deprecated use `RefundRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RefundRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `RefundRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RefundRequestBody$Outbound, z.ZodTypeDef, RefundRequestBody>;
    /** @deprecated use `RefundRequestBody$Outbound` instead. */
    type Outbound = RefundRequestBody$Outbound;
}
//# sourceMappingURL=refundrequestbody.d.ts.map