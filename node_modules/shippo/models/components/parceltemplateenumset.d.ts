import * as z from "zod";
import { ParcelTemplateAramexAustraliaEnum } from "./parceltemplatearamexaustraliaenum.js";
import { ParcelTemplateCouriersPleaseEnum } from "./parceltemplatecourierspleaseenum.js";
import { ParcelTemplateDHLeCommerceEnum } from "./parceltemplatedhlecommerceenum.js";
import { ParcelTemplateDPDUKEnum } from "./parceltemplatedpdukenum.js";
import { ParcelTemplateFedExEnum } from "./parceltemplatefedexenum.js";
import { ParcelTemplateUPSEnum } from "./parceltemplateupsenum.js";
import { ParcelTemplateUSPSEnum } from "./parceltemplateuspsenum.js";
/**
 * If template is passed, `length`, `width`, `height`, and `distance_unit` are not required
 */
export type ParcelTemplateEnumSet = ParcelTemplateFedExEnum | ParcelTemplateUPSEnum | ParcelTemplateUSPSEnum | ParcelTemplateDHLeCommerceEnum | ParcelTemplateDPDUKEnum | ParcelTemplateCouriersPleaseEnum | ParcelTemplateAramexAustraliaEnum;
/** @internal */
export declare const ParcelTemplateEnumSet$inboundSchema: z.ZodType<ParcelTemplateEnumSet, z.ZodTypeDef, unknown>;
/** @internal */
export type ParcelTemplateEnumSet$Outbound = string | string | string | string | string | string | string;
/** @internal */
export declare const ParcelTemplateEnumSet$outboundSchema: z.ZodType<ParcelTemplateEnumSet$Outbound, z.ZodTypeDef, ParcelTemplateEnumSet>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ParcelTemplateEnumSet$ {
    /** @deprecated use `ParcelTemplateEnumSet$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ParcelTemplateEnumSet, z.ZodTypeDef, unknown>;
    /** @deprecated use `ParcelTemplateEnumSet$outboundSchema` instead. */
    const outboundSchema: z.ZodType<string, z.ZodTypeDef, ParcelTemplateEnumSet>;
    /** @deprecated use `ParcelTemplateEnumSet$Outbound` instead. */
    type Outbound = ParcelTemplateEnumSet$Outbound;
}
//# sourceMappingURL=parceltemplateenumset.d.ts.map