import * as z from "zod";
import { Manifest, Manifest$Outbound } from "./manifest.js";
export type ManifestPaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<Manifest> | undefined;
};
/** @internal */
export declare const ManifestPaginatedList$inboundSchema: z.ZodType<ManifestPaginatedList, z.ZodTypeDef, unknown>;
/** @internal */
export type ManifestPaginatedList$Outbound = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<Manifest$Outbound> | undefined;
};
/** @internal */
export declare const ManifestPaginatedList$outboundSchema: z.ZodType<ManifestPaginatedList$Outbound, z.ZodTypeDef, ManifestPaginatedList>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ManifestPaginatedList$ {
    /** @deprecated use `ManifestPaginatedList$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ManifestPaginatedList, z.ZodTypeDef, unknown>;
    /** @deprecated use `ManifestPaginatedList$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ManifestPaginatedList$Outbound, z.ZodTypeDef, ManifestPaginatedList>;
    /** @deprecated use `ManifestPaginatedList$Outbound` instead. */
    type Outbound = ManifestPaginatedList$Outbound;
}
//# sourceMappingURL=manifestpaginatedlist.d.ts.map