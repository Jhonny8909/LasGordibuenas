import * as z from "zod";
import { Transaction, Transaction$Outbound } from "./transaction.js";
export type TransactionPaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<Transaction> | undefined;
};
/** @internal */
export declare const TransactionPaginatedList$inboundSchema: z.ZodType<TransactionPaginatedList, z.ZodTypeDef, unknown>;
/** @internal */
export type TransactionPaginatedList$Outbound = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<Transaction$Outbound> | undefined;
};
/** @internal */
export declare const TransactionPaginatedList$outboundSchema: z.ZodType<TransactionPaginatedList$Outbound, z.ZodTypeDef, TransactionPaginatedList>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TransactionPaginatedList$ {
    /** @deprecated use `TransactionPaginatedList$inboundSchema` instead. */
    const inboundSchema: z.ZodType<TransactionPaginatedList, z.ZodTypeDef, unknown>;
    /** @deprecated use `TransactionPaginatedList$outboundSchema` instead. */
    const outboundSchema: z.ZodType<TransactionPaginatedList$Outbound, z.ZodTypeDef, TransactionPaginatedList>;
    /** @deprecated use `TransactionPaginatedList$Outbound` instead. */
    type Outbound = TransactionPaginatedList$Outbound;
}
//# sourceMappingURL=transactionpaginatedlist.d.ts.map